"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const Command_1 = require("../../Command");
const getOperationManifestFromProject_1 = require("../../utils/getOperationManifestFromProject");
class ServicePush extends Command_1.ClientCommand {
    async run() {
        const { clientIdentity, operations, serviceName } = await this.runTasks(({ flags, project, config }) => [
            {
                title: "Pushing client information to Engine",
                task: async (ctx) => {
                    if (!config.name) {
                        throw new Error("No service found to link to Engine");
                    }
                    const operationManifest = getOperationManifestFromProject_1.getOperationManifestFromProject(this.project);
                    const { name, referenceID, version } = config.client;
                    if (!name) {
                        throw new Error("Client name is required to push");
                    }
                    const variables = {
                        clientIdentity: {
                            name: name,
                            identifier: referenceID || name,
                            version
                        },
                        id: config.name,
                        operations: operationManifest,
                        manifestVersion: 2
                    };
                    await project.engine.registerOperations(variables);
                    ctx.operations = operationManifest;
                    ctx.serviceName = variables.id;
                    ctx.clientIdentity = variables.clientIdentity;
                }
            }
        ]);
        this.log(`Successfully pushed ${operations.length} operations from the ${clientIdentity.name} client to the ${serviceName} service in Engine`);
    }
}
ServicePush.description = "Push a service to Engine";
ServicePush.flags = Object.assign({}, Command_1.ClientCommand.flags);
exports.default = ServicePush;
//# sourceMappingURL=push.js.map